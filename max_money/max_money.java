// code by okoto-xyz
// run by "$ cd max_money && javac max_money.java && java max_money && cd .."

import java.math.BigDecimal;

public class max_money {
    public static void main(String[] args) throws Exception {
        final long reward_interval = 12614400;
		BigDecimal current_reward = new BigDecimal(Math.pow(2, 32)); // float - SUGAR: 2^32 (in Satoshis)
		BigDecimal total = BigDecimal.ZERO;
		int halving_count = 0;
		long first_halving = 0;

		System.out.printf("\n");
		System.out.printf("JAVA\n");
		System.out.printf("Count\tSupply\t\t\tPow\tReward\n");
		System.out.printf("%d\t%s\t\t\t2^{%.0f}\t%s\n", halving_count, total.toString(),
				Math.log10(current_reward.doubleValue()) / Math.log10(2), current_reward.toEngineeringString());

		// main loop
		while ((current_reward.compareTo(BigDecimal.ZERO) > 0) && (halving_count < 64)) {
			// halving
			halving_count++;
			System.out.printf("%d\t", halving_count);

			// total
			// System.out.printf("%s\t",
			// 		new BigDecimal(reward_interval).multiply(current_reward).stripTrailingZeros().toPlainString());
			total = total.add(new BigDecimal(reward_interval).multiply(current_reward));
			System.out.printf("%s\t", total.stripTrailingZeros().toPlainString());
			current_reward = current_reward.divide(new BigDecimal(2));

			// current reward
			System.out.printf("2^{%.0f}\t", Math.log10(current_reward.doubleValue()) / Math.log10(2));
			System.out.printf("%s\n", current_reward.stripTrailingZeros().toPlainString());

			// store first halving
			if (halving_count == 1) {
				first_halving = total.longValue();
			}
		}

		// print first halving and guess
		System.out.printf("\n");
		System.out.printf("First Halving in Satoshis:\t%d\n", first_halving);
		System.out.printf("Guess Supply in Satoshis:\t%d\n", first_halving * 2);

		// print result
		System.out.printf("\n");
		System.out.printf("Total Supply in Satoshis:\t%s\n", total.stripTrailingZeros().toPlainString());
		System.out.printf("Total Supply in COINs:\t\t%s\n",
				total.divide(new BigDecimal(100000000)).stripTrailingZeros().toPlainString());
    }
}

// Output Example
/*
$ cd max_money && javac max_money.java && java max_money && cd ..

JAVA
Count	Supply			Pow	Reward
0	0			2^{32}	4294967296
1	54178435458662400	2^{31}	2147483648
2	81267653187993600	2^{30}	1073741824
3	94812262052659200	2^{29}	536870912
4	101584566484992000	2^{28}	268435456
5	104970718701158400	2^{27}	134217728
6	106663794809241600	2^{26}	67108864
7	107510332863283200	2^{25}	33554432
8	107933601890304000	2^{24}	16777216
9	108145236403814400	2^{23}	8388608
10	108251053660569600	2^{22}	4194304
11	108303962288947200	2^{21}	2097152
12	108330416603136000	2^{20}	1048576
13	108343643760230400	2^{19}	524288
14	108350257338777600	2^{18}	262144
15	108353564128051200	2^{17}	131072
16	108355217522688000	2^{16}	65536
17	108356044220006400	2^{15}	32768
18	108356457568665600	2^{14}	16384
19	108356664242995200	2^{13}	8192
20	108356767580160000	2^{12}	4096
21	108356819248742400	2^{11}	2048
22	108356845083033600	2^{10}	1024
23	108356858000179200	2^{9}	512
24	108356864458752000	2^{8}	256
25	108356867688038400	2^{7}	128
26	108356869302681600	2^{6}	64
27	108356870110003200	2^{5}	32
28	108356870513664000	2^{4}	16
29	108356870715494400	2^{3}	8
30	108356870816409600	2^{2}	4
31	108356870866867200	2^{1}	2
32	108356870892096000	2^{0}	1
33	108356870904710400	2^{-1}	0.5
34	108356870911017600	2^{-2}	0.25
35	108356870914171200	2^{-3}	0.125
36	108356870915748000	2^{-4}	0.0625
37	108356870916536400	2^{-5}	0.03125
38	108356870916930600	2^{-6}	0.015625
39	108356870917127700	2^{-7}	0.0078125
40	108356870917226250	2^{-8}	0.00390625
41	108356870917275525	2^{-9}	0.001953125
42	108356870917300162.5	2^{-10}	0.0009765625
43	108356870917312481.25	2^{-11}	0.00048828125
44	108356870917318640.625	2^{-12}	0.000244140625
45	108356870917321720.3125	2^{-13}	0.0001220703125
46	108356870917323260.15625	2^{-14}	0.00006103515625
47	108356870917324030.078125	2^{-15}	0.000030517578125
48	108356870917324415.0390625	2^{-16}	0.0000152587890625
49	108356870917324607.51953125	2^{-17}	0.00000762939453125
50	108356870917324703.759765625	2^{-18}	0.000003814697265625
51	108356870917324751.8798828125	2^{-19}	0.0000019073486328125
52	108356870917324775.93994140625	2^{-20}	0.00000095367431640625
53	108356870917324787.969970703125	2^{-21}	0.000000476837158203125
54	108356870917324793.9849853515625	2^{-22}	0.0000002384185791015625
55	108356870917324796.99249267578125	2^{-23}	0.00000011920928955078125
56	108356870917324798.496246337890625	2^{-24}	0.000000059604644775390625
57	108356870917324799.2481231689453125	2^{-25}	0.0000000298023223876953125
58	108356870917324799.62406158447265625	2^{-26}	0.00000001490116119384765625
59	108356870917324799.812030792236328125	2^{-27}	0.000000007450580596923828125
60	108356870917324799.9060153961181640625	2^{-28}	0.0000000037252902984619140625
61	108356870917324799.95300769805908203125	2^{-29}	0.00000000186264514923095703125
62	108356870917324799.976503849029541015625	2^{-30}	0.000000000931322574615478515625
63	108356870917324799.9882519245147705078125	2^{-31}	0.0000000004656612873077392578125
64	108356870917324799.99412596225738525390625	2^{-32}	0.00000000023283064365386962890625

First Halving in Satoshis:	54178435458662400
Guess Supply in Satoshis:	108356870917324800

Total Supply in Satoshis:	108356870917324799.99412596225738525390625
Total Supply in COINs:		1083568709.1732479999412596225738525390625
*/